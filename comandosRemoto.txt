git clone 'url' //Con eso podemos clonar un repositorio

git push //Sirve para enviarlo al repositorio remoto

git feth //Lo trae a mis archivos pero no lo copia, para eso lo tenemos que fucionar con el siguiente comando

git merge //Sirve para unirlo con mi trabajo pero para no poner 2 comandos tenemos el siguiente

git pull //Este hace el comando feth y merge para 'jalarlo'

git commit -am //agrega los archivos que tuvieron un cambio en automatico

voy a crear una rama de Master

Esto lo estoy escribiendo desde Master, lo que dara conflicto y xd
esto lo estoy creando desde la rama 'primera rama', luego le hare un merge a master

Head solo es el ultimo commit de la rama en la que este

Voy a hacer otro cambio aqui en 'primeraRama' y otro en 'master' para luego hacer el merge

asi es como se ve cuando tenemos un conflicto y es facil arreglarlo, solo te quedas con lo que quieres y borras el
resto

git push origin main //Para hacer el push

pit pull origin main //Para hacer el main

cuando  se trabaja con ramas estas se tienen que enviar a gitHub una por una 'git pull origin <nombreRama>'
git stash //Si me equivoque de rama donde queria esos cambios puedo utilizarlo para almacenar los cambios actuales

git stash list //Es para ver los que tengo en stash

git stash pop //Sirve para obtener los cambios que estaban

git stash branch <nombreRama> // Esto me sirve para hacer el branch en una nueva rama

git stash drop //elimina el stash

git clean --dry-run //Te dice que es lo que git planea borrar

git clean -f //Borra archivos duplicados

//Mala practica, no la uses
git cherry-pick <hash-commit> //Hace un estilo 'merge' que solo se trae algunos commit pero esto me puede dar conflicto a la hora del merge por que esta duplicado

git config --global alias.'nombreAlias' "comando" //Esto sirve para crear alias dentro de git, el nombreAlias es sin comillas

git 'comando' --help //Para ver la entrada en el manual

git blame 'archivo' -L10,15 -c //Sirve para saber quien edito las lineas de un archivo, -L sirve para ver solo algunas lineas, -c para que se vea mejor

git branch -r //Sirve para ver las ramas remotas

git branch -a //Sirve para ver tanto las ramas locales como las remotas

git branch -d //Eliminar una rama

git commit --amend //Los cambios hechos los pegara en el commit anterior

git reflog //Me permite ver todas las cabeceras que ah tenido el commit

git grep -n 'palabra'//te sirve para sber donde lo eh utilizado, -n me dice en que lineas

git grep -c 'palabra'//Cuantas veces esta en cada archivo

git log -S "palabra" //Ver todos los commits con una palabra